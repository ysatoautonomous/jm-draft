.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\" and Copyright (C) 2006, 2014 Michael Kerrisk
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" Modified by Michael Haardt <michael@moria.de>
.\" Modified 1993-07-21 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1997-01-12 by Michael Haardt
.\"   <michael@cantor.informatik.rwth-aachen.de>: NFS details
.\" Modified 2004-06-23 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 1996 Yosiaki Yanagihara
.\"         all rights reserved.
.\" Translated 1996-06-24, Yosiaki Yanagihara <yosiaki@bsd2.kbnes.nec.co.jp>
.\" Modified 1998-05-11, HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\" Updated & Modified 2001-06-25, Yuichi SATO <ysato@h4.dion.ne.jp>
.\" Updated & Modified 2004-12-29, Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated 2008-08-09, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v3.05
.\" Updated & Modified Mon Jan 11 22:55:39 JST 2021
.\"         by Yuichi SATO <ysato444@ybb.ne.jp>, LDP v5.07
.\"
.TH CHMOD 2 2017-09-15 "Linux" "Linux Programmer's Manual"
.SH 名前
chmod, fchmod, fchmodat \- ファイルのモードを変更する
.SH 書式
.nf
\fB#include <sys/stat.h>\fP
.PP
\fBint chmod(const char *\fP\fIpathname\fP\fB, mode_t \fP\fImode\fP\fB);\fP
.br
\fBint fchmod(int \fP\fIfd\fP\fB, mode_t \fP\fImode\fP\fB);\fP

\fB#include <fcntl.h>\fP           /* AT_* 定数の定義 */
\fB#include <sys/stat.h>\fP
.PP
\fBint fchmodat(int \fP\fIdirfd\fP\fB, const char *\fP\fIpathname\fP\fB, mode_t \fP\fImode\fP\fB, int \fP\fIflags\fP\fB);\fP
.fi
.PP
.in -4n
glibc 向けの機能検査マクロの要件 (\fBfeature_test_macros\fP(7)  参照):
.in
.PP
.ad l
.PD 0
\fBfchmod\fP():
.RS 4
.\"O Since glibc 2.24:
glibc 2.24 以降:
    _POSIX_C_SOURCE\ >=\ 199309L
.\"        || (_XOPEN_SOURCE && _XOPEN_SOURCE_EXTENDED)
.PP
.\"O Glibc 2.19 to 2.23
glibc 2.19 から 2.23
    _POSIX_C_SOURCE
.PP
.\"O Glibc 2.16 to 2.19:
glibc 2.16 から 2.19:
    _BSD_SOURCE || _POSIX_C_SOURCE
.PP
.\"O Glibc 2.12 to 2.16:
glibc 2.12 から 2.16:
    _BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
        _POSIX_C_SOURCE >= 200809L
.PP
.\"O Glibc 2.11 and earlier:
glibc 2.11 以前:
    _BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500
.\"        || (_XOPEN_SOURCE && _XOPEN_SOURCE_EXTENDED)
.RE
.PD
.PP
\fBfchmodat\fP():
.PD 0
.ad l
.RS 4
.TP  4
glibc 2.10 以降:
_POSIX_C_SOURCE\ >=\ 200809L
.TP 
glibc 2.10 より前:
_ATFILE_SOURCE
.RE
.ad
.PD
.ad
.SH 説明
.\"O .BR chmod ()
.\"O and
.\"O .BR fchmod ()
.\"O system calls change a files mode bits.
.\"O (The file mode consists of the file permission bits plus the set-user-ID,
.\"O set-group-ID, and sticky bits.)
システムコール \fBchmod\fP() と \fBfchmod\fP() は、
ファイルのモードビットを変更する。
(ファイルモードには、ファイルのアクセス許可 (permission) に加え、
set-user-ID, set-group-ID, スティッキービット (sticky bit) が含まれる。)
.\"O These system calls differ only in how the file is specified:
システムコール間の違いは、ファイルの指定の仕方だけである。
.IP * 2
.\"O .BR chmod ()
.\"O changes the mode of the file specified whose pathname is given in
\fBchmod\fP()  は、 \fIpathname\fP で指定されたパス名を持つファイルのモードを変更する。 \fIpathname\fP
がシンボリックリンクの場合は、リンクの展開が行われる。
.IP *
.\"O .BR fchmod ()
.\"O changes the mode of the file referred to by the open file descriptor
\fBfchmod\fP()  は、オープンされたファイルディスクリプター \fIfd\fP により参照されるファイルのモードを変更する。
.PP
.\"O The new file mode is specified in
.\"O .IR mode ,
.\"O which is a bit mask created by ORing together zero or
.\"O more of the following:
新しいファイルモードは \fImode\fP で指定される。 \fImode\fP は、以下に示す値の 0 個以上の OR (論理和) をとって作成される
ビットマスクである。
.TP  18
\fBS_ISUID\fP  (04000)
set\-user\-ID (\fBexecve\fP(2)  時にプロセスの実効ユーザー ID にセットされる)
.TP 
\fBS_ISGID\fP  (02000)
set\-group\-ID (以下の場合に (\fBexecve\fP(2)  実行時にプロセスの実効グループ ID にセットされる、 強制ロック
(mandatory locking) を行う (\fBfcntl\fP(2)  の説明を参照)、
新しいファイルのグループとして親ディレクトリと同じものを使う (\fBchown\fP(2)  と \fB(\fPmkdir\fB(2)\fP の説明を参照)
.TP 
\fBS_ISVTX\fP  (01000)
スティッキービット (sticky bit) (削除制限フラグ、 \fBunlink\fP(2)  の説明を参照)
.TP 
\fBS_IRUSR\fP  (00400)
所有者による読み取り
.TP 
\fBS_IWUSR\fP  (00200)
所有者による書き込み
.TP 
\fBS_IXUSR\fP  (00100)
所有者による実行 (execute) / 検索 (search)  (「検索」はディレクトリに対して適用されるもので、
そのディレクトリ内のエントリーへアクセスできるかを意味する)
.TP 
\fBS_IRGRP\fP  (00040)
グループによる読み取り
.TP 
\fBS_IWGRP\fP  (00020)
グループによる書き込み
.TP 
\fBS_IXGRP\fP  (00010)
グループによる実行 / 検索
.TP 
\fBS_IROTH\fP  (00004)
他人 (others) による読み取り
.TP 
\fBS_IWOTH\fP  (00002)
他人による書き込み
.TP 
\fBS_IXOTH\fP  (00001)
他人による実行 / 検索
.PP
呼び出したプロセスの実効 (effective) UID がファイルの所有者と一致するか、 そのプロセスが特権を持たなければならない (Linux では
\fBCAP_FOWNER\fP ケーパビリティ (capability) を持たなければならない)。
.PP
呼び出したプロセスに特権がなく (Linux では \fBCAP_FSETID\fP ケーパビリティがなく)、かつファイルのグループ ID が
プロセスの実効グループ ID または補助的なグループ ID にマッチしない場合、 \fBS_ISGID\fP
ビットはオフにされるが、これによってエラーが返されることはない。
.PP
安全のための処置として、 ファイルシステムによっては、ファイルの書き込みを行う時に set\-user\-ID とset\-group\-ID
ビットと実行ビットが オフにされることがある。 (Linux では、書き込みプロセスが \fBCAP_FSETID\fP
ケーパビリティを持っていない場合に、これが起こる。)  ファイルシステムの中には、スーパーユーザーだけが
特別の意味を持つスティッキービットを設定できるものがある。 スティッキービットとディレクトリに対する set\-user\-ID
(set\-group\-ID) ビットについては、 \fBinode\fP(7)  を見よ。
.PP
.\"
.\"
NFS ファイルシステム上では、パーミッションを制限すると、 既にオープンされているファイルに対してすぐに影響が及ぶ。
これはアクセス制御がサーバー上で行われているが、 オープンされているファイルはクライアント側で管理されているためである。
クライアント側でファイル属性のキャッシュが有効になっている場合に、 パーミッションの制限を緩くすると、
他のクライアントに情報が伝わるのが遅れるかもしれない。
.SS fchmodat()
\fBfchmodat\fP() システムコールは \fBchmod\fP() と全く同様に動作するが、以下で説明する点が異なる。
.PP
\fIpathname\fP で指定されたパス名が相対パスの場合、このパス名はファイルディスクリプター \fIdirfd\fP
が参照するディレクトリに対する相対パスと解釈される (\fBchmod\fP()
に相対パス名を渡した場合のように、呼び出したプロセスのカレントワーキングディレクトリに対する相対パスではない)。
.PP
\fIpathname\fP で指定されたパス名が相対パスで、 \fIdirfd\fP が特別な値 \fBAT_FDCWD\fP の場合、 (\fBchmod\fP()
と同様に) \fIpathname\fP は呼び出したプロセスのカレントワーキングディレクトリに対する相対パスと解釈される。
.PP
\fIpathname\fP で指定されたパス名が絶対パスの場合、 \fIdirfd\fP は無視される。
.PP
\fIflags\fP には 0 か、以下のフラグを指定することができる。
.TP 
\fBAT_SYMLINK_NOFOLLOW\fP
\fIpathname\fP
がシンボリックリンクの場合、リンクの展開を行わない。代わりに、リンク自身に対して操作を行う。このフラグは現在のところ実装されていない。
.PP
\fBfchmodat\fP() の必要性についての説明については \fBopenat\fP(2) を参照。
.SH 返り値
成功した場合は 0 が返される。エラーの場合は \-1 が返され、 \fIerrno\fP が適切に設定される。
.SH エラー
ファイルシステムによっては、下記の一覧にない他のエラーが返されることもある。
.PP
\fBchmod\fP() のごく一般的なエラーを挙げる:
.TP 
\fBEACCES\fP
パス名の構成要素に検索許可がない (\fBpath_resolution\fP(7)  も見よ)。
.TP 
\fBEFAULT\fP
\fIpathname\fP がアクセス可能なアドレス空間の外を指している。
.TP 
\fBEIO\fP
I/O エラーが発生した。
.TP 
\fBELOOP\fP
\fIpathname\fP を解決するときに、解決すべきシンボリックリンクが多すぎた。
.TP 
\fBENAMETOOLONG\fP
\fIpathname\fP が長過ぎる。
.TP 
\fBENOENT\fP
ファイルが存在しない。
.TP 
\fBENOMEM\fP
カーネルに十分なメモリーがない。
.TP 
\fBENOTDIR\fP
パス名の構成要素がディレクトリではない。
.TP 
\fBEPERM\fP
実効 UID がファイルの所有者と一致せず、プロセスに特権がない (Linux では \fBCAP_FOWNER\fP ケーパビリティを持たない)。
.TP
.B EPERM
.\"O The file is marked immutable or append-only.
.\"O (See
.\"O .BR ioctl_iflags (2).)
ファイルが複製不可 (immutable) または、追加のみとしてマークされてる。
.RB ( ioctl_iflags (2)
を参照。)
.TP
\fBEROFS\fP
ファイルが読み込み専用 (read only) のファイルシステム上にある。
.PP
\fBfchmod\fP()  で一般的なエラーを挙げる:
.TP 
\fBEBADF\fP
ファイルディスクリプター \fIfd\fP が有効でない。
.TP 
\fBEIO\fP
上記を参照。
.TP 
\fBEPERM\fP
上記を参照。
.TP 
\fBEROFS\fP
上記を参照。
.PP
\fBchmod\fP() で発生するのと同じエラーが \fBfchmodat\fP() でも起こる。 \fBfchmodat\fP() では以下のエラーも発生する。
.TP 
\fBEBADF\fP
\fIdirfd\fP が適切なファイルディスクリプターでない。
.TP 
\fBEINVAL\fP
\fIflags\fP に無効なフラグが指定された。
.TP 
\fBENOTDIR\fP
\fIpathname\fP が相対パスで、 \fIdirfd\fP がディレクトリ以外のファイルを参照しているファイルディスクリプターである。
.TP 
\fBENOTSUP\fP
\fIflags\fP に対応していないフラグ \fBAT_SYMLINK_NOFOLLOW\fP が指定された。
.SH バージョン
\fBfchmodat\fP()  はカーネル 2.6.16 で Linux に追加された。 ライブラリによるサポートはバージョン 2.4 以降の glibc
で利用できる。
.SH 準拠
\fBchmod\fP(), \fBfchmod\fP(): 4.4BSD, SVr4, POSIX.1\-2001i, POSIX.1\-2008.
.PP
\fBfchmodat\fP(): POSIX.1\-2008.
.SH 注意
.\"O .SS C library/kernel differences
.SS "C ライブラリとカーネルの違い"
GNU C ライブラリの \fBfchmodat\fP() ラッパー関数は、このページで説明している POSIX
で規定されたインターフェースを実装している。このインターフェースは、内部で呼ばれる Linux のシステムコールとは異なる。システムコールは
\fIflags\fP 引き数を\fI持たない\fP。
.SS "glibc での注意"
\fBfchmodat\fP() が利用できない古いカーネルでは、 glibc ラッパー関数は \fBchmod\fP() を使用するモードにフォールバックする。
\fIpathname\fP が相対パスの場合、 glibc は \fIdirfd\fP 引き数に対応する \fI/proc/self/fd\fP
のシンボリックリンクに基づいてパス名を構成する。
.SH 関連項目
.BR chmod (1),
.BR chown (2),
.BR execve (2),
.BR open (2),
.BR stat (2),
.BR inode (7),
.BR path_resolution (7),
.BR symlink (7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.07 の一部である。
プロジェクトの説明、バグ報告に関する情報、このページの最新版は、
http://www.kernel.org/doc/man\-pages/ に書かれている。
