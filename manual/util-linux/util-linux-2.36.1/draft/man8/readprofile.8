.\"
.\" Japanese Version Copyright (c) 2020-2021 Yuichi SATO
.\"         all rights reserved.
.\" Translated Tue Apr 28 22:28:16 JST 2020
.\"         by Yuichi SATO <ysato444@ybb.ne.jp>
.\" Updated & Modified Thu Feb  4 21:11:37 JST 2021 by Yuichi SATO
.\"
.TH READPROFILE "8" "October 2011" "util-linux" "System Administration"
.\"O .SH NAME
.SH 名前
.\"O readprofile \- read kernel profiling information
readprofile \- カーネルのプロファイル情報を読み込む。
.\"O .SH SYNOPSIS
.SH 書式
.B readprofile
[options]
.\"O .SH VERSION
.SH バージョン
.\"O This manpage documents version 2.0 of the program.
この man ページはプログラムのバージョン 2.0 についてドキュメント化している。
.\"O .SH DESCRIPTION
.SH 説明
.\"O The
.\"O .B readprofile
.\"O command uses the
.\"O .I /proc/profile
.\"O information to print ascii data on standard output.  The output is
.\"O organized in three columns: the first is the number of clock ticks,
.\"O the second is the name of the C function in the kernel where those
.\"O many ticks occurred, and the third is the normalized `load' of the
.\"O procedure, calculated as a ratio between the number of ticks and the
.\"O length of the procedure.  The output is filled with blanks to ease
.\"O readability.
.B readprofile
コマンドは
.I /proc/profile
の情報を使い、ASCII データを標準出力に表示する。
出力は 3 列から構成される。
1 列目はクロックティック (clock ticks) 数、
2 列目はそのティックス数が発生したカーネルの C 言語の関数名、
3 列目はプロシージャの正規化した「負荷」の値であり、
ティックス数とプロシージャの長さの割合である。
出力は、読みやすいように、空白で埋められる。
.\"O .SH OPTIONS
.SH オプション
.TP
\fB\-a\fR, \fB\-\-all\fR
.\"O Print all symbols in the mapfile.  By default the procedures with
.\"O reported ticks are not printed.
マップファイル内の全てのシンボルを表示する。
デフォルトでは、レポートされるティックスのプロシージャは
表示されない。
.TP
\fB\-b\fR, \fB\-\-histbin\fR
.\"O Print individual histogram-bin counts.
各ヒストグラムの区間のカウントを表示する。
.TP
\fB\-i\fR, \fB\-\-info\fR
.\"O Info.  This makes
.\"O .B readprofile
.\"O only print the profiling step used by the kernel.  The profiling step
.\"O is the resolution of the profiling buffer, and is chosen during
.\"O kernel configuration (through `make config'), or in the kernel's
.\"O command line.  If the
.\"O .B \-t
.\"O (terse) switch is used together with
.\"O .B \-i
.\"O only the decimal number is printed.
情報。
このオプションを指定すると、
.B readprofile
はカーネルによって使われるプロファイリングステップのみを表示する。
プロファイリングステップは、プロファイリングバッファの精度であり、
(`make config' による) カーネル設定、またはカーネルのコマンドラインで選択される。
.B \-t
(terse: 簡略) スイッチが
.B \-i
とともに使われた場合、10 進数の値のみが表示される。
.TP
\fB\-m\fR, \fB\-\-mapfile\fR \fImapfile\fR
.\"O Specify a mapfile, which by default is
.\"O .IR /usr/src/linux/System.map .
.\"O You should specify the map file on cmdline if your current kernel
.\"O isn't the last one you compiled, or if you keep System.map elsewhere.
.\"O If the name of the map file ends with `.gz' it is decompressed on the
.\"O fly.
マップファイルを指定する。
デフォルトは
.I /usr/src/linux/System.map
である。
現在のカーネルが最後にコンパイルしたものでない場合、
または System.map をどこか他の場所に置いている場合、
マップファイルをコマンドラインで指定すべきである。
マップファイル名が `.gz' で終わっている場合、自動で展開される。
.TP
\fB\-M\fR, \fB\-\-multiplier\fR \fImultiplier\fR
.\"O On some architectures it is possible to alter the frequency at which
.\"O the kernel delivers profiling interrupts to each CPU.  This option
.\"O allows you to set the frequency, as a multiplier of the system clock
.\"O frequency, HZ. Linux 2.6.16 dropped multiplier support for most systems.
.\"O This option also resets the profiling buffer, and requires superuser
.\"O privileges.
アーキテクチャによっては、カーネルが各 CPU で行うプロファイリング割り込みの
周期を変更することができる。
このオプションでは、割り込みの周期を、システムクロックの周波数の
倍数に設定できる (HZ)。
Linux 2.6.16 では多くのシステムで倍数のサポートをなくした。
このオプションはプロファイリングバッファのリセットも行い、
スーパーユーザー権限が必要である。
.TP
\fB\-p\fR, \fB\-\-profile\fR \fIpro-file\fR
.\"O Specify a different profiling buffer, which by default is
.\"O .IR /proc/profile .
.\"O Using a different pro-file is useful if you want to `freeze' the
.\"O kernel profiling at some time and read it later.  The
.\"O .I /proc/profile
.\"O file can be copied using `cat' or `cp'.  There is no more support for
.\"O compressed profile buffers, like in
.\"O .B readprofile-1.1,
.\"O because the program needs to know the size of the buffer in advance.
別のプロファイリングバッファを指定する。
デフォルトは
.I /proc/profile
である。
別の pro-file を使うのは、ある時点のカーネルプロファイリングを「凍結して (freeze)」、
後から読み込むのに役立つ。
ファイル
.I /proc/profile
は `cat' や `cp' を使ってコピーできる。
.B readprofile-1.1
にあった圧縮したプロファイリングバッファは、このプログラムが
バッファサイズを前もって知る必要があるため、もはやサポート
されてない。
.TP
\fB\-r\fR, \fB\-\-reset\fR
.\"O Reset the profiling buffer.  This can only be invoked by root,
.\"O because
.\"O .I /proc/profile
.\"O is readable by everybody but writable only by the superuser.
プロファイリングバッファをリセットする。
.I /proc/profile
は誰でも読み出し可能であるが、スーパーユーザーのみが書き込み
可能であるので、このオプションは root によってのみ呼び出し可能である。
.\"O However, you can make
.\"O .B readprofile
.\"O set-user-ID 0, in order to reset the buffer without gaining privileges.
しかし、
.B readprofile
を set-user-ID 0 にすれば、特権を得ずにバッファをリセットできる。
.TP
\fB\-s, \fB\-\-counters\fR
.\"O Print individual counters within functions.
関数内の各カウンタを表示する。
.TP
\fB\-v\fR, \fB\-\-verbose\fR
.\"O Verbose.  The output is organized in four columns and filled with
.\"O blanks.  The first column is the RAM address of a kernel function,
.\"O the second is the name of the function, the third is the number of
.\"O clock ticks and the last is the normalized load.
詳細な表示を行う。
出力は 4 つのカラムから構成され、空白で埋められる。
1 列目はカーネル関数の RAM アドレス、2 列目は関数名、
3 列目はクロックティック数、4 列目は正規化した負荷である。
.TP
\fB\-V\fR, \fB\-\-version\fR
.\"O Display version information and exit.
バージョン番号を表示して、終了する。
.TP
\fB\-h\fR, \fB\-\-help\fR
.\"O Display help text and exit.
ヘルプを表示して、終了する。
.\"O .SH FILES
.SH ファイル
.nf
.\"O /proc/profile              A binary snapshot of the profiling buffer.
.\"O /usr/src/linux/System.map  The symbol table for the kernel.
.\"O /usr/src/linux/*           The program being profiled :-)
/proc/profile              プロファイリングバッファのバイナリスナップショット
/usr/src/linux/System.map  カーネルのシンボルテーブル
/usr/src/linux/*           プロファイリング対象のプログラム :-)
.fi
.\"O .SH BUGS
.SH バグ
.LP
.\"O .B readprofile
.\"O only works with a 1.3.x or newer kernel, because
.\"O .I /proc/profile
.\"O changed in the step from 1.2 to 1.3
.I /proc/profile
はカーネル 1.2 から 1.3 の段階で変更されたので、
.B readprofile
は 1.3.x より新しいカーネルでしか動作しない。
.LP
.\"O This program only works with ELF kernels.  The change for a.out
.\"O kernels is trivial, and left as an exercise to the a.out user.
このプログラムは ELF カーネルでしか動作しない。
a.out カーネルでの変更は取るに足らないものであるので、
a.out のユーザーへの練習として残してある。
.LP
.\"O To enable profiling, the kernel must be rebooted, because no
.\"O profiling module is available, and it wouldn't be easy to build.  To
.\"O enable profiling, you can specify "profile=2" (or another number) on
.\"O the kernel commandline.  The number you specify is the two-exponent
.\"O used as profiling step.
プロファイリングを有効にするには、カーネルを再起動しなければならない。
なぜなら、プロファイリングモジュールは存在せず、簡単にはビルドできない
からである。
プロファイリングを有効にするには、カーネルのコマンドラインで
"profile=2" (または他の数値) を指定すればよい。
この数値は 2 のべき乗になり、プロファイリングのステップで使われる。
.LP
.\"O Profiling is disabled when interrupts are inhibited.  This means that
.\"O many profiling ticks happen when interrupts are re-enabled.  Watch
.\"O out for misleading information.
割り込みが禁止されているときには、プロファイリングは無効化される。
割り込みが再度有効化されたときに、多くのプロファイリングのティックスが
発生する。
誤解を生みやすい情報に注意すること。
.\"O .SH EXAMPLE
.SH 例
.\"O Browse the profiling buffer ordering by clock ticks:
プロファイリングバッファをクロックティックの順に並べて見る:
.nf
   readprofile | sort \-nr | less

.fi
.\"O Print the 20 most loaded procedures:
負荷の高い順に 20 個のプロシージャを表示する:
.nf
   readprofile | sort \-nr +2 | head \-20

.fi
.\"O Print only filesystem profile:
ファイルシステムプロファイルのみを表示する:
.nf
   readprofile | grep _ext2

.fi
.\"O Look at all the kernel information, with ram addresses:
全てのカーネル情報を RAM アドレス付きで見る:
.nf
   readprofile \-av | less

.fi
.\"O Browse a `frozen' profile buffer for a non current kernel:
現在のカーネルのものではない「凍結した」プロファイリングバッファを見る:
.nf
   readprofile \-p ~/profile.freeze \-m /zImage.map.gz

.fi
.\"O Request profiling at 2kHz per CPU, and reset the profiling buffer:
CPU 毎に 2kHz でプロファイリングを行い、プロファイリングバッファをリセットする:
.nf
   sudo readprofile \-M 20
.fi
.\"O .SH AVAILABILITY
.SH 入手方法
.\"O The readprofile command is part of the util-linux package and is
.\"O available from
.\"O .UR https://\:www.kernel.org\:/pub\:/linux\:/utils\:/util-linux/
.\"O Linux Kernel Archive
.\"O .UE .
readprofile コマンドは util-linux パッケージの一部であり、
.UR https://\:www.kernel.org\:/pub\:/linux\:/utils\:/util-linux/
Linux Kernel Archive
.UE
から入手できる。
