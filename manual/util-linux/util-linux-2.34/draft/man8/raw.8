.\" -*- nroff -*-
.\" This man page is a part of util-linux package
.\"
.\" Japanese Version Copyright (c) 2000 NAKANO Takeo all rights reserved.
.\" Translated Sun May 14 2000 by NAKANO Takeo <nakano@@apm.seikei.ac.jp>
.\" Updated & Modified Wed May  5 17:00:32 JST 2004
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated & Modified Wed Mar 25 07:05:27 JST 2020
.\"         by Yuichi SATO <ysato444@ybb.ne.jp>
.\"
.TH RAW 8 "August 1999" "util-linux" "System Administration"
.\"O .SH NAME
.\"O raw \- bind a Linux raw character device
.SH 名前
raw \- Linux raw キャラクタデバイスをバインドする
.\"O .SH SYNOPSIS
.SH 書式
.B raw
.I /dev/raw/raw<N> <major> <minor>
.PP
.B raw
.I /dev/raw/raw<N> /dev/<blockdev>
.PP
.B raw \-q
.I /dev/raw/raw<N>
.PP
.B raw \-qa
.\"O .SH DESCRIPTION
.SH 説明
.\"O .B raw
.\"O is used to bind a Linux raw character device to a block device.  Any
.\"O block device may be used: at the time of binding, the device driver does
.\"O not even have to be accessible (it may be loaded on demand as a kernel
.\"O module later).
.B raw
は Linux raw キャラクタデバイスを
ブロックデバイスにバインドするために用いられる。
どんなブロックデバイスでも利用できる。
またバインドする時にデバイスドライバがアクセス可能でなくてもかまわない
(つまりオンデマンドでロードされるカーネルモジュールであってもかまわない)。 
.PP
.\"O .B raw
.\"O is used in two modes: it either sets raw device bindings, or it queries
.\"O existing bindings.  When setting a raw device,
.\"O .I /dev/raw/raw<N>
.\"O is the device name of an existing raw device node in the filesystem.
.\"O The block device to which it is to be bound can be specified either in
.\"O terms of its
.\"O .I major
.\"O and
.\"O .I minor
.\"O device numbers, or as a path name
.\"O .I /dev/<blockdev>
.\"O to an existing block device file.
.B raw
の利用法には 2 つのモードがある。一つは raw デバイスのバインドを
設定する動作であり、もう一つは存在しているバインドに対する問合わせをする
動作である。 raw デバイスの設定をするときは、
.I /dev/raw/raw<N>
はファイルシステム中に存在している raw デバイスのノードのデバイス名である。
バインド先のブロックデバイスは、
.IR major " と " minor
番号で示しても良いし、存在しているブロックデバイスファイルのパス名
.I /dev/<blockdev>
で示しても良い。
.PP
.\"O The bindings already in existence can be queried with the
.\"O .I \-q
.\"O option, which is used either with a raw device filename to query that one
.\"O device, or with the
.\"O .I \-a
.\"O option to query all bound raw devices.
既に存在しているバインドに対して、
.I \-q
オプションによって問合わせを行うことができる。
この際には、問合わせる raw デバイスのファイル名を指定しても良いし、
.I \-a
オプションを用いればバインド済みの全ての raw デバイスが対象となる。
.PP
.\"O Unbinding can be done by specifying major and minor 0.
major と minor を 0 に指定することにより、アンバインドすることができる。
.PP
.\"O Once bound to a block device, a raw device can be opened, read and
.\"O written, just like the block device it is bound to.  However, the raw
.\"O device does not behave exactly like the block device.  In particular,
.\"O access to the raw device bypasses the kernel's block buffer cache
.\"O entirely: all I/O is done directly to and from the address space of the
.\"O process performing the I/O.  If the underlying block device driver can
.\"O support DMA, then no data copying at all is required to complete the
.\"O I/O.
いったん raw デバイスをブロックデバイスにバインドすると、
その raw デバイスはバインド先のブロックデバイスと同じように
オープンしたり read/write できる。しかし raw デバイスの動作は
ブロックデバイスと全く同じではない。特に違う点としては、
raw デバイスへのアクセスは、
カーネルのブロックバッファキャッシュを全く用いない。
全ての I/O は、その I/O を行ったプロセスのアドレス空間に対して
直に行われる。もし下層にあるブロックデバイスドライバが
DMA をサポートしていると、データコピーを全く行わなくても
I/O を完了することができる。
.PP
.\"O Because raw I/O involves direct hardware access to a process's memory, a
.\"O few extra restrictions must be observed.  All I/Os must be correctly
.\"O aligned in memory and on disk: they must start at a sector offset on
.\"O disk, they must be an exact number of sectors long, and the data buffer
.\"O in virtual memory must also be aligned to a multiple of the sector
.\"O size.  The sector size is 512 bytes for most devices.
raw I/O では、プロセスのアドレス空間が割り付けられた物理メモリに
直接的なハードウェアアクセスを行うので、例外的な制限がいくつか存在する。
全ての I/O はメモリやディスク上で正しくアラインされていなければならない。
すなわちディスク上のセクタ先頭から始まり、セクタ長の整数倍で、
かつ仮想メモリ上のデータバッファもセクタ長の整数倍でなければならない。
ほとんどのデバイスでは、セクタのサイズは 512 バイトである。
.\"O .SH OPTIONS
.SH オプション
.TP
\fB\-q\fR, \fB\-\-query\fR
.\"O Set query mode.
.\"O .B raw
.\"O will query an existing binding instead of setting a new one.
問合わせモード。
.B raw
は新たなバインドを設定する代わりに、
既存のバインドに対する問合わせを行う。
.TP
\fB\-a\fR, \fB\-\-all\fR
.\"O With
.\"O .B \-q
.\"O , specify that all bound raw devices should be queried.
.B \-q
オプションとともに用い、既存のバインド済み
raw デバイスすべてに対して問合わせを行う。
.TP
\fB\-h\fR, \fB\-\-help\fR
.\"O Display help text and exit.
ヘルプを表示して、終了する。
.TP
\fB\-V\fR, \fB\-\-version\fR
.\"O Display version information and exit.
バージョン情報を表示して、終了する。

.\"O .SH BUGS
.SH バグ
.\"O The Linux
.\"O .BR dd (1)
.\"O command should be used without the \fBbs=\fR option, or the blocksize
.\"O needs to be a multiple of the sector size of the device (512 bytes usually),
.\"O otherwise it will fail with "Invalid Argument" messages (EINVAL).
Linux の
.BR dd (1)
コマンドは、\fBbs=\fR オプションなしで使うべきである。
また、ブロックサイズはデバイスのセクタサイズ (通常は 512 バイト) の
倍数である必要がある。
さもないと、
.BR dd (1)
は "Invalid Argument" メッセージ (EINVAL) を出して、失敗する。

.PP
.\"O Raw I/O devices do not maintain cache coherency with the Linux block
.\"O device buffer cache.  If you use raw I/O to overwrite data already in
.\"O the buffer cache, the buffer cache will no longer correspond to the
.\"O contents of the actual storage device underneath.  This is deliberate,
.\"O but is regarded either a bug or a feature depending on who you ask!
raw I/O デバイスは、 Linux ブロックデバイスのバッファキャッシュとの
キャッシュの整合性を管理しない。バッファキャッシュに既に存在するデータを
raw I/O を用いて上書きすると、そのバッファキャッシュの指す記憶装置の
デバイスの実際の内容との不整合が発生する。
これは恣意的なものであるが、
質問した人によって、回答はバグであったり仕様であったりするだろう!
.\"O .SH NOTES
.SH 注意
.\"O Rather than using raw devices applications should prefer
.\"O .BR open (2)
.\"O devices, such as /dev/sda1, with the O_DIRECT flag.
アプリケーションは、raw デバイスを使うよりも、
/dev/sda1 のようなデバイスを O_DIRECT フラグ付きで
.BR open (2)
するべきである。
.\"O .SH AUTHOR
.SH 著者
Stephen Tweedie (sct@redhat.com)
.\"O .SH AVAILABILITY
.SH 入手方法
.\"O The raw command is part of the util-linux package and is available from
.\"O https://www.kernel.org/pub/linux/utils/util-linux/.
raw コマンドは util-linux パッケージの一部であり、
https://www.kernel.org/pub/linux/utils/util-linux/
から入手できる。
