.\" Copyright 1992, 1993 Rickard E. Faith (faith@cs.unc.edu)
.\" Copyright 1998 Andries E. Brouwer (aeb@cwi.nl)
.\" Copyright 2012 Davidlohr Bueso <dave@gnu.org>
.\" Copyright (C) 2013 Karel Zak <kzak@redhat.com>
.\" May be distributed under the GNU General Public License
.\"
.\" Japanese Version Copyright (c) 1997-1998 NAKANO Takeo all rights reserved.
.\" Translated Thu Sep 11 1997 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated & Modified Fri 3 Jul 1998 by NAKANO Takeo
.\" Updated & Modified Thu 7 Oct 1999 by NAKANO Takeo 
.\" Updated & Modified Sat 18 Mar 2000 by NAKANO Takeo 
.\" Updated & Modified Jun 14 May 2000 by NAKANO Takeo 
.\" Updated & Modified Tue May  4 23:47:43 JST 2004
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated & Modified Sat Nov  2 00:19:30 JST 2019
.\"         by Yuichi SATO <ysato444@ybb.ne.jp>
.\"
.TH FDISK 8 "February 2016" "util-linux" "System Administration"

.\"O .SH NAME
.SH 名前
.\"O fdisk \- manipulate disk partition table
fdisk \- ディスクパーティションテーブルを操作する

.\"O .SH SYNOPSIS
.SH 書式
.B fdisk
[options]
.I device
.sp
.B fdisk \-l
.RI [ device ...]

.\"O .SH DESCRIPTION
.SH 説明
.\"O .B fdisk
.\"O is a dialog-driven program for creation and manipulation of partition tables.
.B fdisk
はパーティションテーブルの作成と操作を行う対話型のプログラムである。
.\"O It understands GPT, MBR, Sun, SGI and BSD partition tables.
このプログラムは GPT, MBR, Sun, SGI, BSD パーティションテーブルを操作できる。

.\"O Block devices can be divided into one or more logical disks called
.\"O .IR partitions .
.\"O This division is recorded in the
.\"O .IR "partition table" ,
.\"O usually found in sector 0 of the disk.
ブロックデバイスは、一つ以上の論理的なディスクに分割することができる。
これは
.I　パーティション (partition)
と呼ばれる。この分割に関する情報は、ディスクのセクタ 0 に置かれる
.I パーティションテーブル
に保存される。
.\"O (In the BSD world one talks about `disk slices' and a `disklabel'.)
(BSD の世界では、それぞれ「ディスクスライス (disk slice)」、
「ディスクラベル (disklabel)」といった用語が用いられる。)

.\"O All partitioning is driven by device I/O limits (the topology) by default.
すべてのパーティション分割は、デフォルトでは I/O 制限 (トポロジー) によって操作される。
.\"O .B fdisk
.\"O is able to optimize the disk layout for a 4K-sector size and use an alignment offset on
.\"O modern devices for MBR and GPT.  It is always a good idea to follow \fBfdisk\fR's defaults
.\"O as the default values (e.g. first and last partition sectors) and partition
.\"O sizes specified by the +/-<size>{M,G,...} notation are always aligned according
.\"O to the device properties.
.B fdisk
はディスクレイアウトを 4K セクタサイズで最適化し、
MBR と GPT では最近のデバイスについて配置オフセットを使うことができる。
\fBfdisk\fR のデフォルトをデフォルト値 (例えば、開始と最終パーティションセクタ)
として従うのは、常に良い考えである。
また、+/-<size>{M,G,...} 形式で指定されたパーティションサイズは、
常にデバイスのプロパティに応じて配置される。

.\"O CHS (Cylinder-Head-Sector) addressing is deprecated and not used by default.
.\"O Please, do not follow old articles and recommendations with "fdisk -S <n> -H
.\"O <n>" advices for SSD or 4K-sector devices.
CHS (シリンダ-ヘッダ-セクタ) アドレス指定は廃れているので、デフォルトでは使用しないこと。
SSD または 4K セクタのデバイスについて、
"fdisk -S <n> -H <n>" のアドバイスをしている古い記事や推奨事項には、従ってはいけない。

.\"O Note that
.\"O .BR partx (8)
.\"O provides a rich interface for scripts to print disk layouts,
.\"O .B fdisk
.\"O is mostly designed for humans.  Backward compatibility in the output of
.\"O .B fdisk
.\"O is not guaranteed.  The input (the commands) should always be backward compatible.
.BR partx (8)
はスクリプトからディスクレイアウトを表示するために、
リッチなインタフェースを提供している。
.B fdisk
は大部分は人が使うためにデザインされている。
.B fdisk
の出力の後方互換は保証されていない。
入力 (コマンド) は常に後方互換であるべきだろう。

.\"O .SH OPTIONS
.SH オプション
.TP
\fB\-b\fR, \fB\-\-sector\-size\fR \fIsectorsize\fP
.\"O Specify the sector size of the disk.  Valid values are 512, 1024, 2048, and 4096.
.\"O (Recent kernels know the sector size.  Use this option only on old kernels or
.\"O to override the kernel's ideas.)  Since util-linux-2.17, \fBfdisk\fR differentiates
.\"O between logical and physical sector size.  This option changes both sector sizes to
.\"O .IB sectorsize .
ディスクのセクタサイズを指定する。
指定できる値は 512, 1024, 2048, 4096 のいずれかである。
(最近のカーネルはセクタサイズをうまく扱える。
このオプションを用いるのは、カーネルが古い場合や、
カーネルの考えを上書きする場合だけにすること。)
util-linux-2.17 以降で、\fBfdisk\fR は論理セクタサイズと
物理セクタサイズを異なる値にする。
このオプションは両方のセクタサイズを
.I sectorsize
にする。
.TP
\fB\-B\fR, \fB\-\-protect\-boot\fP
.\"O Don't erase the begin of the first disk sector when create a new disk label.  This
.\"O feature is supported for GPT and MBR.
新しいディスクラベルを作成するときに、
最初のディスクセクタを消去しない。
この機能は GPT と MBR でサポートされる。
.TP
\fB\-c\fR, \fB\-\-compatibility\fR[=\fImode\fR]
.\"O Specify the compatibility mode, 'dos' or 'nondos'.  The default is non-DOS
.\"O mode.  For backward compatibility, it is possible to use the option without
.\"O the \fImode\fR argument -- then the default is used.  Note that the optional
.\"O \fImode\fR argument cannot be separated from the \fB-c\fR option by a space,
.\"O the correct form is for example '-c=dos'.
互換モード 'dos' または 'nondos' を指定する。
デフォルトは non-DOS モードである。
後方互換のため、このオプションは
\fImode\fR 引き数を指定せずに使うことができる。-- その場合に、このデフォルトが使われる。
オプションの \fImode\fR 引き数は、\fB-c\fR オプションと
スペースを開けて使うことができない点に注意すること。
正しい形式は、例えば '-c=dos' である。
.TP
\fB\-h\fR, \fB\-\-help\fR
.\"O Display a help text and exit.
ヘルプを表示して、終了する。
.TP
\fB\-L\fR, \fB\-\-color\fR[=\fIwhen\fR]
.\"O Colorize the output.  The optional argument \fIwhen\fP
.\"O can be \fBauto\fR, \fBnever\fR or \fBalways\fR.  If the \fIwhen\fR argument is omitted,
.\"O it defaults to \fBauto\fR.  The colors can be disabled; for the current built-in default
.\"O see the \fB\-\-help\fR output.  See also the \fBCOLORS\fR section.
出力をカラー表示する。
オプションの引き数 \fIwhen\fP は、
\fBauto\fR, \fBnever\fR, \fBalways\fR である。
\fIwhen\fR 引き数が省略された場合、デフォルトは \fBauto\fR である。
カラー表示は無効化できる。
現在の組み込みのデフォルトは、
\fB\-\-help\fR 出力を参照すること。
\fBCOLORS\fR セクションも参照すること。
.TP
\fB\-l\fR, \fB\-\-list\fR
.\"O List the partition tables for the specified devices and then exit.
.\"O If no devices are given, those mentioned in
.\"O .I /proc/partitions
.\"O (if that file exists) are used.
指定したデバイスのパーティションテーブルをリストして終了する。
デバイスを何も指定しないと、
.I /proc/partitions
があれば、そこにあるデバイスを対象にする。
.TP
.BR \-o , " \-\-output " \fIlist\fP
.\"O Specify which output columns to print.  Use
.\"O .B \-\-help
.\"O to get a list of all supported columns.
出力する列を指定する。
サポートされる列のリストを取得するには、
.B \-\-help
を使うこと。

.\"O The default list of columns may be extended if \fIlist\fP is
.\"O specified in the format \fI+list\fP (e.g. \fB-o +UUID\fP).
デフォルトの列のリストは、\fIlist\fP を
\fI+list\fP の形式で指定することで拡張できる (例えば \fB-o +UUID\fP)。
.TP
\fB\-s\fR, \fB\-\-getsz\fR
.\"O Print the size in 512-byte sectors of each given block device.  This option is DEPRECATED
.\"O in favour of
.\"O .BR blockdev (1).
指定されたブロックデバイスを 512 バイトセクタ単位でサイズを表示する。
このオプションは\fB廃れており\fR、
.BR blockdev (1)
を使うべきである。
.TP
\fB\-t\fR, \fB\-\-type\fR \fItype\fR
.\"O Enable support only for disklabels of the specified \fItype\fP, and disable
.\"O support for all other types.
指定された \fItype\fP のディスクラベルのみを有効にして、
他のすべてのタイプを無効にする。
.TP
\fB\-u\fR, \fB\-\-units\fR[=\fIunit\fR]
.\"O When listing partition tables, show sizes in 'sectors' or in 'cylinders'.  The
.\"O default is to show sizes in sectors.  For backward compatibility, it is possible
.\"O to use the option without the \fIunit\fR argument -- then the default is used.
パーティションテーブルをリストする際に、サイズを「セクタ数」または
「シリンダ数」で表示する。
デフォルトではサイズをセクタ数で表示する。
後方互換のため、このオプションは
\fIunit\fR 引き数を指定せずに使うことができる。-- その場合に、このデフォルトが使われる。
.\"O Note that the optional \fIunit\fR argument cannot be separated from the \fB-u\fR
.\"O option by a space, the correct form is for example '-u=cylinders'.
オプションの \fIunit\fR 引き数は、\fB-u\fR オプションと
スペースを開けて使うことができない点に注意すること。
正しい形式は、例えば '-u=cylinders' である。

.TP
\fB\-C\fR, \fB\-\-cylinders\fR \fInumber\fR
.\"O Specify the number of cylinders of the disk.
ディスクのシリンダ数を指定する。
.\"O I have no idea why anybody would want to do so.
なぜこれを指定したいと思うのかは分からない。
.TP
\fB\-H\fR, \fB\-\-heads\fR \fInumber\fR
.\"O Specify the number of heads of the disk.  (Not the physical number,
.\"O of course, but the number used for partition tables.)
.\"O Reasonable values are 255 and 16.
ディスクのヘッダ数を指定する
(もちろん物理的なヘッダ数ではなく、
パーティションテーブルに使われるヘッダ数である)。
適切な値は 255 または 16 である。
.TP
\fB\-S\fR, \fB\-\-sectors\fR \fInumber\fR
.\"O Specify the number of sectors per track of the disk.
.\"O (Not the physical number, of course, but the number used for
.\"O partition tables.) A reasonable value is 63.
ディスクの 1 トラック当りのセクタ数を指定する
(もちろん物理的なセクタ数ではなく、
パーティションテーブルに使われるセクタ数である)。
適切な値は 63 である。

.TP
\fB\-w\fR, \fB\-\-wipe\fR \fIwhen\fR
.\"O Wipe filesystem, RAID and partition-table signatures from the device, in order
.\"O to avoid possible collisions.  The argument \fIwhen\fR can be \fBauto\fR,
.\"O \fBnever\fR or \fBalways\fR.  When this option is not given, the default is
.\"O \fBauto\fR, in which case signatures are wiped only when in interactive mode.
衝突の可能性を避けるため、デバイスからファイルシステム、RAID、
パーティションテーブルの署名 (signature) を消去する。 
引き数 \fIwhen\fR は \fBauto\fR, \fBnever\fR, \fBalways\fR のいずれかである。
デフォルトは \fBauto\fR であり、対話モードの場合にのみ、署名が消去される。
.\"O In all cases detected signatures are reported by warning messages
.\"O before a new partition table is created.  See also
.\"O .BR wipefs (8)
.\"O command.
新しいパーティションテーブルが作成される前に、
すべての場合において、検知された署名は警告メッセージで報告される。
.BR wipefs (8)
コマンドを参照すること。

.TP
\fB\-W\fR, \fB\-\-wipe-partition\fR \fIwhen\fR
.\"O Wipe filesystem, RAID and partition-table signatures from a newly created
.\"O partitions, in order to avoid possible collisions.  The argument \fIwhen\fR can
.\"O be \fBauto\fR, \fBnever\fR or \fBalways\fR.  When this option is not given, the
.\"O default is \fBauto\fR, in which case signatures are wiped only when in
.\"O interactive mode and after confirmation by user.  In all cases detected
.\"O signatures are reported by warning messages before a new partition is
.\"O created.  See also
.\"O .BR wipefs (8)
.\"O command.
衝突の可能性を避けるため、新しく作成されたパーティションから
ファイルシステム、RAID、パーティションテーブルの署名を消去する。 
引き数 \fIwhen\fR は \fBauto\fR, \fBnever\fR, \fBalways\fR のいずれかである。
デフォルトは \fBauto\fR であり、対話モードの場合にユーザが承諾した後に、署名が消去される。
新しいパーティションが作成される前に、
すべての場合において、検知された署名は警告メッセージで報告される。
.BR wipefs (8)
コマンドを参照すること。

.TP
\fB\-V\fR, \fB\-\-version\fR
.\"O Display version information and exit.
バージョン情報を表示して、終了する。

.\"O .SH DEVICES
.SH デバイス
.\"O The
.\"O .I device
.\"O is usually /dev/sda, /dev/sdb or so.  A device name refers to the entire disk.
.\"O Old systems without libata (a library used inside the Linux kernel to support
.\"O ATA host controllers and devices) make a difference between IDE and SCSI disks.
.\"O In such cases the device name will be /dev/hd* (IDE) or /dev/sd* (SCSI).
.I device
は、通常は /dev/sda, /dev/sdb などである。
デバイス名はディスク全体を示す。
libata (Linux カーネル内部で ATA ホストコントローラとデバイスをサポートするライブラリ) を
使っていない古いシステムでは、IDE と SCSI ディスクで違いがある。
この場合、デバイス名が /dev/hd* (IDE) と /dev/sd* (SCSI) になる。

.\"O The
.\"O .I partition
.\"O is a device name followed by a partition number.  For example, /dev/sda1 is the
.\"O first partition on the first hard disk in the system.  See also Linux kernel
.\"O documentation (the Documentation/devices.txt file).
.I パーティション (partition)
はデバイス名の後にパーティション番号が続く。
例えば、/dev/sda1 は、システムの最初のハードディスクの最初のパーティションである。
Linux カーネルのドキュメント (Documentation/devices.txt ファイル) も参照すること。

.\"O .SH SIZES
.SH サイズ
.\"O The "last sector" dialog accepts partition size specified by number of sectors
.\"O or by +/-<size>{K,B,M,G,...} notation.
「最終セクタ」ダイアログで、パーティションサイズを、
セクタ数または +/-<size>{K,B,M,G,...} 形式で受け付ける。

.\"O If the size is prefixed by  '+' then it is interpreted as relative to the
.\"O partition first sector.  If the size is prefixed by  '-' then it is interpreted
.\"O as relative to the high limit (last available sector for the partition).
サイズの前に '+' を付けると、パーティションの最初のセクタからの相対位置として解釈される。
サイズの前に '-' を付けると、上限 (パーティションの最終セクタ) からの相対位置として解釈される。

.\"O In the case the size is specified in bytes than the number may be followed by
.\"O the multiplicative suffixes KiB=1024, MiB=1024*1024, and so on for GiB, TiB,
.\"O PiB, EiB, ZiB and YiB. The "iB" is optional, e.g. "K" has the same meaning as
.\"O "KiB".
サイズをバイトではなく、数値と倍数のサフィックス KiB=1024, MiB=1024*1024,
さらに GiB, TiB, PiB, EiB, ZiB, YiB を続けて指定できる。
"iB" はオプションであり、例えば "K" は "KiB" と同じ意味である。

.\"O The relative sizes are always aligned according to device I/O limits.  The
.\"O +/-<size>{K,B,M,G,...} notation is recommended.
相対サイズはデバイスの I/O 制限に基づいて常に配置される。
+/-<size>{K,B,M,G,...} 形式が推奨される。

.\"O For backward compatibility fdisk also accepts the suffixes KB=1000,
.\"O MB=1000*1000, and so on for GB, TB, PB, EB, ZB and YB. These 10^N suffixes
.\"O are deprecated.
後方互換のため、fdisk はサフィックス
KB=1000, MB=1000*1000, さらに GB, TB, PB, EB, ZB, YB を受け付ける。
これらの 10^N サフィックスは廃れている。

.\"O .SH SCRIPT FILES
.SH スクリプトファイル
.\"O .B fdisk
.\"O allows to read (by 'I' command) sfdisk compatible script files. The script is
.\"O applied to in-memory partition table, and then it is possible to modify the
.\"O partition table before you write it to the device.
.B fdisk
は sfdisk 互換のスクリプトファイルを ('I' コマンドで) 読み込むことができる。
スクリプトファイルはメモリ内のパーティションテーブルとして適用され、
デバイスに書き込む前にパーティションテーブルを修正することができる。
.PP
.\"O And vice-versa it is possible to write the current in-memory disk layout
.\"O to the script file by command 'O'.
逆に、現在のメモリ内のディスクレイアウトをコマンド 'O' でスクリプトに書き出すことができる。
.PP
.\"O The script files are compatible between cfdisk, sfdisk, fdisk and another
.\"O libfdisk applications. For more details see
.\"O .BR sfdisk (8).
スクリプトファイルは cfdisk, sfdisk, fdisk と他の libfdisk アプリケーションで
互換性がある。
より詳細は
.BR sfdisk (8)
を参照すること。

.\"O .SH DISK LABELS
.SH ディスクラベル
.B GPT (GUID Partition Table)
.RS
.\"O GPT is modern standard for the layout of the partition table.  GPT uses 64-bit
.\"O logical block addresses, checksums, UUIDs and names for partitions and an
.\"O unlimited number of partitions (although the number of partitions is
.\"O usually restricted to 128 in many partitioning tools).
GPT は、パーティションテーブルのレイアウトの、現在の標準である。
GPT は 64-bit 論理ブロックアドレス、チェックサム、UUID と
パーティション名を使い、無限のパーティション数が使える
(ただし、パーティション数は、多くのパーティション分割ツールで
たいてい 128 に制限されている)。

.\"O Note that the first sector is still reserved for a
.\"O .B protective MBR
.\"O in the GPT specification.  It prevents MBR-only partitioning tools
.\"O from mis-recognizing and overwriting GPT disks.
最初のセクタは GPT 仕様でも
.B protective MBR
として予約されている。
これは、MBR のみのパーティション分割ツールが、
GPT ディスクを誤認識して上書きするのを防止する。

.\"O GPT is always a better choice than MBR, especially on modern hardware with a UEFI
.\"O boot loader.
GPT は、特に現在のハードウェアで UEFI ブートローダを使う場合に、
MBR より常に優れた選択肢である。
.RE

.\"O .B DOS-type (MBR)
.B DOS 形式 (MBR)
.RS
.\"O A DOS-type partition table can describe an unlimited number of partitions.  In sector 0
.\"O there is room for the description of 4 partitions (called `primary').  One of
.\"O these may be an extended partition; this is a box holding logical partitions,
.\"O with descriptors found in a linked list of sectors, each preceding the
.\"O corresponding logical partitions.  The four primary partitions, present or not,
.\"O get numbers 1-4.  Logical partitions are numbered starting from 5.
DOS 形式のパーティションテーブルは、パーティションの数に制限がない。
セクタ 0 には、4 つのパーティション
(「基本 (primary) パーティション」と呼ばれる) に関する情報が記述されている。
これら基本パーティションは、拡張 (extended) パーティションにすることもできる。
これは論理 (logical) パーティションの入れ物となる。
拡張パーティションにはディスクリプターが
セクタのリンクリストの形式で置かれ、
それぞれ対応する論理パーティションの情報を保持する。
4 つの基本パーティションには (存在していなくても)
番号 1\-4 が割り当てられる。論理パーティションの番号は 5 から始まる。

.\"O In a DOS-type partition table the starting offset and the size of each
.\"O partition is stored in two ways: as an absolute number of sectors (given in 32
.\"O bits), and as a
.\"O .B Cylinders/Heads/Sectors
.\"O triple (given in 10+8+6 bits).  The former is OK -- with 512-byte sectors this
.\"O will work up to 2 TB.  The latter has two problems.  First, these C/H/S fields
.\"O can be filled only when the number of heads and the number of sectors per track
.\"O are known.  And second, even if we know what these numbers should be, the 24
.\"O bits that are available do not suffice.  DOS uses C/H/S only, Windows uses
.\"O both, Linux never uses C/H/S.  The
.\"O .B C/H/S addressing is deprecated
.\"O and may be unsupported in some later fdisk version.
DOS 形式のパーティションテーブルでは、それぞれのパーティションの
スタートオフセットとサイズは、二種類の方法で保存される。
一つはセクタの絶対数 (32 ビット) であり、
もう一つは「
.RB 「 "シリンダ数/ヘッド数/セクタ数 (C/H/S)" 」
の三つの組み合わせである (それぞれ 10, 8, 6 ビット)。
前者には問題は特になく、512 バイトのセクタで 2 TB を扱うことができる。
後者には二種類の問題がある。まず第一に、この C/H/S を与えるためには、
ヘッド数とトラックあたりのセクタ数を知っていなければならない。
第二に、これらの数値がわかったとしても、24 ビットでは足りないかもしれない。
DOS は C/H/S だけを用いる。Windows は両方を用いる。
Linux では C/H/S は使わない。
.B "C/H/S アドレス指定は廃れているので、"
今後の fdisk のバージョンではサポートされないかもしれない。

.\"O .B Please, read the DOS-mode section if you want DOS-compatible partitions.
.\"O .B fdisk
.\"O does not care about cylinder boundaries by default.
.B DOS 互換パーティションを使いたい場合、DOS モードのセクションを読んでほしい。
.B fdisk
はデフォルトではシリンダ境界を考慮しない。
.RE

.\"O .B BSD/Sun-type
.B BSD/Sun 形式
.RS
.\"O A BSD/Sun disklabel can describe 8 partitions, the third of which should be a `whole
.\"O disk' partition.  Do not start a partition that actually uses its first sector
.\"O (like a swap partition) at cylinder 0, since that will destroy the disklabel.
BSD/SUN 形式のディスクラベルは 8 パーティションを扱うことができる。
そのうち 3 番目は「ディスク全体」を表すパーティションとなる。
先頭セクタを実際に利用するパーティション (スワップなど) を
シリンダ 0 から割り当ててはならない。ディスクラベルを破壊してしまう。
.\"O Note that a
.\"O .B BSD label
.\"O is usually nested within a DOS partition.
.B BSD ラベル
は通常は DOS パーティション内でネストされる。
.RE

.\"O .B IRIX/SGI-type
.B IRIX/SGI 形式
.RS
.\"O An IRIX/SGI disklabel can describe 16 partitions, the eleventh of which should be an entire
.\"O `volume' partition, while the ninth should be labeled `volume header'.  The
.\"O volume header will also cover the partition table, i.e., it starts at block
.\"O zero and extends by default over five cylinders.  The remaining space in the
.\"O volume header may be used by header directory entries.  No partitions may
.\"O overlap with the volume header.  Also do not change its type or make some
.\"O filesystem on it, since you will lose the partition table.  Use this type of
.\"O label only when working with Linux on IRIX/SGI machines or IRIX/SGI disks under
.\"O Linux.
IRIX/SGI 形式のディスクラベルは、16 パーティションを記述できる。
そのうちの第 11 番目は `volume' 全体に対応するパーティションであり、
第 9 番目は `volume header' とラベル付けされる。
volume header はパーティションテーブルの領域もカバーする。
つまり volume header はブロック 0 から始まり、デフォルトでは
シリンダ 5 までの部分を占める。volume header の残りの部分は
ヘッダディレクトリエントリに用いられる。
volume header は他のパーティションと重なってはならない。
またパーティションテーブルが含まれているので、形式を変更したり、
ファイルシステムを作ったりもできない。
このラベル形式は、IRIX/SGI マシンで動作している Linux か、
IRIX/SGI ディスクを Linux で使う場合に限って用いること。
.RE

.\"O A sync() and an ioctl(BLKRRPART) (rereading the partition table from disk)
.\"O are performed before exiting when the partition table has been updated.
パーティションテーブルが更新された場合、
sync() と ioctl(BLKRRPART) (ディスクからパーティションテーブルの再読み込み) が、　
終了前に実行される。

.\"O .SH "DOS mode and DOS 6.x WARNING"
.SH "DOS 6.x 向けの警告"
.\"O .B Note that all this is deprecated.  You don't have to care about things like
.\"O .B geometry and cylinders on modern operating systems.  If you really want
.\"O .B DOS-compatible partitioning then you have to enable DOS mode and cylinder
.\"O .B units by using the '-c=dos -u=cylinders' fdisk command-line options.
.B ここに書かれていることは古い点に注意すること。
.B 現在のオペレーティングシステムではジオメトリとシリンダに注意する必要がない。
.B DOS 互換のパーティションを本当に使いたいなら、
.B '-c=dos -u=cylinders' fdisk コマンドラインオプションで、
.B DOS モードとシリンダを有効にする必要がある。

.\"O The DOS 6.x FORMAT command looks for some information in the first sector of
.\"O the data area of the partition, and treats this information as more reliable
.\"O than the information in the partition table.  DOS FORMAT expects DOS FDISK to
.\"O clear the first 512 bytes of the data area of a partition whenever a size
.\"O change occurs.  DOS FORMAT will look at this extra information even if the /U
.\"O flag is given -- we consider this a bug in DOS FORMAT and DOS FDISK.
DOS 6.x の FORMAT コマンドはパーティションのデータエリアの
第一セクタからある種の情報を検索し、
これをパーティションテーブルにある情報より信頼できるものとして扱う。
DOS の FORMAT は、容量が変更されたときには最初の 512 バイト分の
データ領域が DOS 版 FDISK によってクリアされていることを仮定している。
DOS の FORMAT はこの拡張情報を /U フラグを指定した場合でも見ようとする
\-\- これは DOS FORMAT と DOS FDISK のバグであると我々は考える。

.\"O The bottom line is that if you use \fBfdisk\fR or \fBcfdisk\fR to change the
.\"O size of a DOS partition table entry, then you must also use
.\"O .BR dd "(1) to " "zero the first 512 bytes"
.\"O of that partition before using DOS FORMAT to format the partition.  For
.\"O example, if you were using \fBfdisk\fR to make a DOS partition table entry for
.\"O /dev/sda1, then (after exiting \fBfdisk\fR and rebooting Linux so that the
.\"O partition table information is valid) you would use the command "dd
.\"O if=/dev/zero of=/dev/sda1 bs=512 count=1" to zero the first 512 bytes of the
.\"O partition.
結局のところ、cfdisk や fdisk を用いて DOS パーティションの容量を
変更したときは、DOS FORMAT を使ってパーティションをフォーマットする前に
.B dd
を使って先頭の 512 バイトを 0 で埋めなければならない、というわけである。
例えば cfdisk を用いて /dev/hda1 の DOS パーティションの
テーブルエントリを作成した場合には、(fdisk または cfdisk を終了し、
Linux をリブートしてパーティションテーブルの情報を有効にしたあとで)
先頭の 512 バイトをゼロにするために
"dd if=/dev/zero of=/dev/hda1 bs=512 count=1"
などと実行する必要がある。

.\"O .B fdisk
.\"O usually obtains the disk geometry automatically.  This is not necessarily the
.\"O physical disk geometry (indeed, modern disks do not really have anything like a
.\"O physical geometry, certainly not something that can be described in the simplistic
.\"O Cylinders/Heads/Sectors form), but it is the disk geometry that MS-DOS uses for
.\"O the partition table.
.B fdisk
は通常はディスクジオメトリを自動的に取得する。
これは物理ディスクジオメトリである必要はないが、
MS-DOS はパーティションテーブルに、このディスクジオメトリを使う
(実際、最近のディスクは物理ジオメトリのようなものを持っておらず、
シンプルなシリンダ数/ヘッダ数/セクタ数の形式で記述できるものではない)。

.\"O Usually all goes well by default, and there are no problems if Linux is the
.\"O only system on the disk.  However, if the disk has to be shared with other
.\"O operating systems, it is often a good idea to let an fdisk from another
.\"O operating system make at least one partition.  When Linux boots it looks at the
.\"O partition table, and tries to deduce what (fake) geometry is required for good
.\"O cooperation with other systems.
通常は、デフォルトですべてうまくいき、ディスク上のシステムが
Linux のみであれば、何も問題ない。
しかし、ディスクを他のオペレーティングシステムと共有しなければならない
場合、少なくとも 1 つのパーティションを別のオペレーティングシステムから
fdisk を実行するのは良い考えである。
Linux がブートする時、パーティションテーブルを見て、
他のシステムと協調するために、
どのような (仮想の) ジオメトリが必要かを推定しようとする。

.\"O Whenever a partition table is printed out in DOS mode, a consistency check is
.\"O performed on the partition table entries.  This check verifies that the
.\"O physical and logical start and end points are identical, and that each
.\"O partition starts and ends on a cylinder boundary (except for the first
.\"O partition).
DOS モードでパーティションテーブルを表示する場合、
パーティションテーブルのエントリの整合性チェックが実行される。
このチェックでは、物理と論理の開始と終了ポイントが等しいかを検証し、
(最初のパーティションを除いて) 各パーティションが
シリンダ境界で開始と終了しているかを検証する。

.\"O Some versions of MS-DOS create a first partition which does not begin
.\"O on a cylinder boundary, but on sector 2 of the first cylinder.
.\"O Partitions beginning in cylinder 1 cannot begin on a cylinder boundary, but
.\"O this is unlikely to cause difficulty unless you have OS/2 on your machine.
MS-DOS のいくつかのバージョンでは、シリンダ境界で始まらず、
最初のシリンダのセクタ 2 で始まるように、最初のパーティションを作成する。
シリンダ 1 で始まるパーティションは、シリンダ境界で始まることができず、
マシンに OS/2 がない限り、面倒事を起こす可能性がある。

.\"O For best results, you should always use an OS-specific partition table
.\"O program.  For example, you should make DOS partitions with the DOS FDISK
.\"O program and Linux partitions with the Linux fdisk or Linux cfdisk programs.
できるだけ問題を起こしたくなければ、常に OS 固有のパーティション
テーブル用プログラムを用いることである。
例えば DOS パーティションは DOS FDISK プログラムで作り、
Linux のパーティションは Linux の fdisk または cfdisk で作るべきなのである。
.\"O .SH COLORS
.SH カラー表示
.\"O Implicit coloring can be disabled by an empty file \fI/etc/terminal-colors.d/fdisk.disable\fR.
暗黙のカラー表示は、空ファイル \fI/etc/terminal-colors.d/fdisk.disable\fR を
使うことで無効化できる。

.\"O See
.\"O .BR terminal-colors.d (5)
.\"O for more details about colorization configuration. The logical color names
.\"O supported by
.\"O .B fdisk
.\"O are:
カラー表示の設定のより詳細は、
.BR terminal-colors.d (5)
を参照すること。
.B fdisk
でサポートされる論理的なカラー名は以下の通りである:
.TP
.B header
.\"O The header of the output tables.
出力テーブルのヘッダ。
.TP
.B help-title
.\"O The help section titles.
ヘルプセクションのタイトル。
.TP
.B warn
.\"O The warning messages.
警告メッセージ。
.TP
.B welcome
.\"O The welcome message.
「ようこそ」のメッセージ。

.\"O .SH AUTHORS
.SH 作者
.MT kzak@redhat.com
Karel Zak
.ME
.br
.MT dave@gnu.org
Davidlohr Bueso
.ME
.br
.PP
.\"O The original version was written by
.\"O Andries E. Brouwer, A. V. Le Blanc and others.
元々のバージョンは、Andries E. Brouwer, A. V. Le Blanc などによって書かれた。

.\"O .SH ENVIRONMENT
.SH 環境変数
.IP FDISK_DEBUG=all
.\"O enables fdisk debug output.
fdisk のデバッグ出力を有効にする。
.IP LIBFDISK_DEBUG=all
.\"O enables libfdisk debug output.
libfdisk のデバッグ出力を有効にする。
.IP LIBBLKID_DEBUG=all
.\"O enables libblkid debug output.
libblkid のデバッグ出力を有効にする。
.IP LIBSMARTCOLS_DEBUG=all
.\"O enables libsmartcols debug output.
libsmartcols のデバッグ出力を有効にする。
.IP LIBSMARTCOLS_DEBUG_PADDING=on
.\"O use visible padding characters. Requires enabled LIBSMARTCOLS_DEBUG.
視認可能な埋め文字を使う。
LIBSMARTCOLS_DEBUG を有効にする必要がある。

.\"O .SH "SEE ALSO"
.SH 関連項目
.BR cfdisk (8),
.BR mkfs (8),
.BR partx (8),
.BR sfdisk (8)

.\"O .SH AVAILABILITY
.SH 入手方法
.\"O The fdisk command is part of the util-linux package and is available from
.\"O https://www.kernel.org/pub/linux/utils/util-linux/.
fdisk コマンドは util-linux パッケージの一部であり、
https://www.kernel.org/pub/linux/utils/util-linux/
から入手できる。
